// Protobufs used to export data from AFF4 to the outside world.

syntax = "proto2";

import "grr/proto/jobs.proto";
import "grr/proto/sysinfo.proto";
import "grr/proto/semantic.proto";


message ExportedMetadata {
  optional string client_urn = 1 [(sem_type) = {
      type: "ClientURN",
      description: "Client ID of a client that contains this entry."
    }];
  optional string hostname = 2;
  optional string os = 3;
  optional uint64 client_age = 4 [(sem_type) = {
      type: "RDFDatetime",
      description: "Age of the client."
    }];
  optional string uname = 5;
  optional string os_release = 6;
  optional string os_version = 7;
  optional string usernames = 8;
  optional string mac_address = 9;

  optional uint64 timestamp = 10 [(sem_type) = {
      type: "RDFDatetime",
      description: "When metadata were recorded."
    }];
  optional string session_id = 11 [(sem_type) = {
      type: "SessionID",
      description: "Session id of a hunt that collected the data."
    }];
}

message ExportedFile {
  optional ExportedMetadata metadata = 1;

  optional string urn = 2 [(sem_type) = {
      type: "RDFURN",
      description: "The location of this file in the AFF4 space."
    }];

  optional string basename = 3 [(sem_type) = {
      description: "Basename of the file."
    }];

  optional uint32 st_mode = 4 [(sem_type) = {
      type: "StatMode",
      description: "A unix file permission mode."
    }];

  optional uint32 st_ino = 5;
  optional uint32 st_dev = 6;
  optional uint32 st_nlink = 7;
  optional uint32 st_uid = 8;
  optional uint32 st_gid = 9;
  optional uint64 st_size = 10;
  optional uint64 st_atime = 11 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last access time."
    }];

  optional uint64 st_mtime = 12 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last modified time."
    }];

  optional uint64 st_ctime = 13 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last inode change time."
    }];

  optional uint32 st_blocks = 14;
  optional uint32 st_blksize = 15;
  optional uint32 st_rdev = 16;
  optional string symlink = 17;

  optional string content = 18;  // Actual content of the file if available.
  optional string content_sha256 = 19;  // sha256 of content.
  // client reported values for the hashes
  optional string hash_md5 = 20;
  optional string hash_sha1 = 21;
  optional string hash_sha256 = 22;
}

message ExportedRegistryKey {
  optional ExportedMetadata metadata = 1;

  optional string urn = 2 [(sem_type) = {
      type: "RDFURN",
      description: "URN of the registry key."
    }];
  optional uint64 last_modified = 3 [(sem_type) = {
      type: "RDFDatetimeSeconds",
      description: "Last modified timestamp."
    }];
  optional StatEntry.RegistryType type = 4;
  optional bytes data = 5;
}

message ExportedProcess {
  optional ExportedMetadata metadata = 1;

  optional uint32 pid = 2;
  optional uint32 ppid = 3;
  optional string name = 4;
  optional string exe = 5;
  optional string cmdline = 6;
  optional uint64 ctime = 7;
  optional uint32 real_uid = 8;
  optional uint32 effective_uid = 9;
  optional uint32 saved_uid = 10;
  optional uint32 real_gid = 11;
  optional uint32 effective_gid = 12;
  optional uint32 saved_gid = 13;
  optional string username = 14;
  optional string terminal = 15;
  optional string status = 16;
  optional int32 nice = 17;
  optional string cwd = 18;
  optional uint32 num_threads = 19;
  optional float user_cpu_time = 20;
  optional float system_cpu_time = 21;
  optional float cpu_percent = 22;
  optional uint64 rss_size = 23;
  optional uint64 vms_size = 24;
  optional float memory_percent = 25;
}

message ExportedNetworkConnection {
  optional ExportedMetadata metadata = 1;

  optional NetworkConnection.Family family = 2;
  optional NetworkConnection.Type type = 3 [default = UNKNOWN_SOCKET];
  optional NetworkEndpoint local_address = 4;
  optional NetworkEndpoint remote_address = 5;
  optional NetworkConnection.State state = 6 [default = UNKNOWN];
  optional uint32 pid = 7;
  optional uint64 ctime = 8;
}

message ExportedOpenFile {
  optional ExportedMetadata metadata = 1;

  optional uint32 pid = 2;
  optional string path = 3;
}

message ExportedVolatilityHandle {
  optional ExportedMetadata metadata = 1;

  optional uint64 offset = 2; // position of the value in memory
  optional uint32 pid = 3; // handler's owner PID
  optional uint32 handle = 4;
  optional uint32 access = 5;
  optional string type = 6; // system handle type, eg: Key or Process
  optional string path = 7; // details, eg: MACHINE\X\Y
}

message ExportedVolatilityMutant {
  optional ExportedMetadata metadata = 1;

  optional uint64 offset = 2; // position of the value in memory
  optional uint32 ptr_count = 3;
  optional uint32 handle_count = 4;
  optional uint32 signal = 5;
  optional uint64 thread = 6;
  optional string cid = 7; // 12345678:123
  optional string name = 8; // named object, eg: XYZLock
}
