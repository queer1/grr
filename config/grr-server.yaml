# GRR Server configuration file
# This is the template used in deployment of GRR. It contains the basic
# elements and test configurations to run the system.

AdminUI.bind: "::"

AdminUI.django_debug: True

AdminUI.django_secret_key: CHANGE_ME

AdminUI.port: 8000

AdminUI.url: http://localhost:8000

AdminUI.webauth_manager: BasicWebAuthManager

Client.company_name: GRR Project

Client.description: "%(platform) Performance Monitor"

Client.location: http://localhost:8080/control

Client.name: GRR

Client.proxy_servers:

Client.version_major: 2

Client.version_minor: 8

Client.version_release: 0

Client.version_revision: 1

Config.aff4_root: aff4:/config/

# Writeback for server components.
Config.writeback: /etc/grr/server.local.yaml

Datastore.implementation: MongoDataStore

Datastore.security_manager: BasicAccessControlManager

Installer.old_writeback: /usr/lib/grr/grrd.conf

Logging.path: /var/log/grr

Logging.verbose: True

Mongo.db_name: grr

# Mongo.server:
Mongo.port: 27017

Monitoring.emergency_access_email: grr-emergency-access@example.com

Monitoring.events_email: grr-monitoring@example.com

# Mysql.database_name:
# Mysql.table_name:
# Mysql.database_username:
# Mysql.database_password:

AdminUI Context:
  Logging.filename: "%(Logging.path)/grr-ui.log"

  Monitoring.stats_server_http_port: 44444

# The client's reported architecture string depends on the Arch context
Arch:amd64:
  Client.arch: amd64

Arch:i386:
  Client.arch: i386

Client Context:
  Config.writeback: /etc/grr/client.local.yaml

ClientBuilder Context:
  ClientBuilder.executables_path: |
    %(ClientBuilder.source)/grr/executables

  Target:Darwin:
    ClientBuilder.build_dest: "%(ClientBuilder.plist_binary_directory)-build"

    ClientBuilder.build_dest_dir: "%(ClientBuilder.build_root_dir)/%(ClientBuilder.build_dest)"

    ClientBuilder.build_root_dir: /Users/%(USER|env)/mac-build

    ClientBuilder.build_src_dir: "%(ClientBuilder.build_root_dir)/grr"

    ClientBuilder.output_extension: .pkg

    ClientBuilder.package_dir: "%(ClientBuilder.build_root_dir)/pkg"

    ClientBuilder.package_maker_name: grr

    ClientBuilder.package_maker_organization: com.google.code

    ClientBuilder.package_maker_path: |
        /Applications/PackageMaker.app/Contents/MacOS/PackageMaker

    ClientBuilder.plist_binary_directory: grr

    ClientBuilder.plist_binary_name: grr

    ClientBuilder.plist_binary_path: |
        %(ClientBuilder.plist_binary_prefix)/%(ClientBuilder.output_basename)/%(ClientBuilder.plist_binary_name)

    ClientBuilder.plist_binary_prefix: /usr/lib

    ClientBuilder.plist_filename: "%(ClientBuilder.plist_label).plist"

    ClientBuilder.plist_label: |
        %(ClientBuilder.plist_label_prefix).google.code.%(ClientBuilder.plist_binary_name)

    ClientBuilder.plist_label_prefix: com

    ClientBuilder.plist_path: /Library/LaunchDaemons/%(ClientBuilder.plist_filename)

    PyInstaller.build_dir: |
        %(ClientBuilder.build_dest_dir)

    PyInstaller.config_name: grr.yaml

    ClientBuilder.output_basename: |
        %(PyInstaller.output_root)/%(PyInstaller.output_version_dir)

    PyInstaller.output_root: |
        %(Client.name)

    PyInstaller.output_version_dir: |
        %(Client.name)_%(Client.version_string)_%(Client.arch)

    PyInstaller.path: |
        /Users/%(USER|env)/mac-build/pyinstaller/pyinstaller.py

  Target:Linux:
    Client.binary_name: grrd

    Client.name: grr

    ClientBuilder.daemon_link: |
      /usr/sbin/%(Client.binary_name)

    ClientBuilder.output_extension: .deb

    ClientBuilder.target_dir: |
      /usr/lib/%(Client.name)/%(PyInstaller.output_version_dir)

    Logging.engines: stderr

    PyInstaller.build_dir: |
      %(PyInstaller.build_root_dir)/build

    PyInstaller.build_root_dir: /grr-build

    PyInstaller.distpath: |
      %(PyInstaller.dpkg_root)/debian/

    PyInstaller.dpkg_root: |
      %(PyInstaller.build_root_dir)/dist

    PyInstaller.output_version_dir: |
      %(Client.name)_%(Client.version_string)_%(Client.arch)

    PyInstaller.path: |
      %(PyInstaller.build_root_dir)/pyinstaller/pyinstaller.py

  Target:Windows:
    ClientBuilder.output_extension: .exe

    ClientBuilder.template_extension: .zip

    ClientBuilder.vs_dir: |
      %{C:\Program Files (x86)\Microsoft Visual Studio 10.0}

    PyInstaller.path: C:\\grr_build\\pyinstaller\\pyinstaller.py

CommandLineTools Context:
  Logging.engines: stderr

  Logging.verbose: False

ConfigUpdater Context:
  ConfigUpdater.old_config: /etc/grr/grr-server.conf

Demo Context:
  Client.location: http://%(Frontend.bind_address):%(Frontend.bind_port)/control

  Client.poll_max: 5

  Client.rss_max: 4000

  Datastore.implementation: FakeDataStore

  Frontend.bind_address: 127.0.0.1

  Frontend.bind_port: 8080

  Logging.filename: "%(Logging.path)/grr-demo.log"

Enroller Context:
  Logging.filename: "%(Logging.path)/grr-enroller.log"

  Monitoring.stats_server_http_port: 44442

Frontend Context:
  Logging.filename: "%(Logging.path)/grr-http-server.log"

Platform:Darwin:
  Client.name: grr

  Client.config_file_name: grr.yaml

  Client.config_file_path_prefix: /etc

  Client.package_maker_organization: com.google.code

  Client.platform: darwin

  Client.plist_binary_directory: grr

  Client.plist_binary_name: grrd

  Client.plist_binary_path: |
    %(ClientBuilder.plist_binary_prefix)/%(ClientBuilder.plist_binary_directory)/%(ClientBuilder.plist_binary_name)

  Client.plist_binary_prefix: /usr

  Client.plist_filename: "%(plist_label).plist"

  Client.plist_label: |
    %(ClientBuilder.plist_label_prefix).google.code.%(ClientBuilder.plist_binary_name)

  Client.plist_label_prefix: com

  Client.plist_path: /Library/LaunchDaemons/%(plist_filename)

  Logging.engines: stderr,file,syslog

  Logging.syslog_path: localhost:514

  MemoryDriver.device_path: /dev/pmem

  MemoryDriver.install_write_path:

  Arch:amd64:
    MemoryDriver.driver_file: binaries/OSXPMem-RC1.tar.gz

Platform:Linux:
  Client.binary_name: grrd

  Client.platform: linux

  Logging.engines: "stderr,file,syslog"

  Logging.syslog_path: "/dev/log"

  MemoryDriver.device_path: /dev/pmem

  MemoryDriver.install_write_path:

Platform:Windows:
  Client.binary_name: "%(Client.name).exe"

  Client.config: reg://%(Client.config_hive)/%(Client.config_key)

  Client.config_hive: HKEY_LOCAL_MACHINE

  Client.config_key: Software\\%(Client.name)

  Client.install_path: |
    %(SystemRoot|env)\\System32\\%(Client.name)\\%(Client.version_string)

  Client.platform: windows

  Logging.engines: "stderr,file,event_log"

  Logging.path: |
    %(WINDIR|env)\\System32\\logfiles\\

  MemoryDriver.device_path: \\\\.\\pmem

  MemoryDriver.display_name: grr pmem

  MemoryDriver.service_name: pmem

  Nanny.child_binary: |
    %(Client.install_path)\\%(Client.binary_name)

  Nanny.child_command_line: |
    %(child_binary) --config "%(Client.install_path)\\%(Client.binary_name).yaml"

  Nanny.nanny_binary: |
    %(Client.install_path)\\%(Nanny.service_binary_name)

  Nanny.service_binary_name: "%(Client.name)service.exe"

  Nanny.service_description: "%(Client.name) Monitor Service"

  Nanny.service_key: "%(Client.config_key)"

  Nanny.service_key_hive: "%(Client.config_hive)"

  Nanny.service_name: "%(Client.name) Monitor"

  Arch:amd64:
    ClientBuilder.vs_arch: x64

    ClientBuilder.vs_env_script: "%(ClientBuilder.vs_dir)/VC/bin/amd64/vcvars64.bat"

    MemoryDriver.aff4_path: |
       %(Config.aff4_root)/drivers/windows/memory/winpmem.amd64.sys

    MemoryDriver.driver_file: binaries/winpmem_amd64_1.4.sys

  Arch:i386:
    ClientBuilder.vs_arch: Win32

    ClientBuilder.vs_env_script: "%(ClientBuilder.vs_dir)/VC/bin/vcvars32.bat"

    MemoryDriver.aff4_path: |
       %(Config.aff4_root)/drivers/windows/memory/winpmem.x86.sys

    MemoryDriver.driver_file: binaries/winpmem_i386_1.4.sys

  Client Context:
    # This is where the client will write back volatile configuration data.
    Config.writeback: reg://%(Client.config_hive)/%(Client.config_key)

SingleServer Context:
  Logging.filename: "%(Logging.path)/grr-single-server.log"

  Monitoring.stats_server_http_port: 44441

Worker Context:
  Logging.filename: "%(Logging.path)/grr-worker.log"

  Monitoring.stats_server_http_port: 44441


